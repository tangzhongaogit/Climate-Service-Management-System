Backend API:

# Climate Service
GET           /climateService/getClimateService/:name/json                                              @controllers.ClimateServiceController.getClimateService(name: String, format: String="json")
GET           /climateService/getClimateService/id/:id                                                  @controllers.ClimateServiceController.getClimateServiceById(id: Long)
GET           /climateService/getAllClimateServices/json                                                @controllers.ClimateServiceController.getAllClimateServices(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByCreateTime/json                          @controllers.ClimateServiceController.getAllClimateServicesOrderByCreateTime(format: String="json")
GET           /climateService/getAllMostRecentClimateServicesByLatestAccessTime/json                    @controllers.ClimateServiceController.getAllClimateServicesOrderByLatestAccessTime(format: String="json")
GET           /climateService/getAllMostUsedClimateServices/json                                        @controllers.ClimateServiceController.getAllClimateServicesOrderByCount(format: String="json")
POST          /climateService/addClimateService                                                         @controllers.ClimateServiceController.addClimateService
GET           /climateService/getAllServiceEntries/json                                                 @controllers.ClimateServiceController.getAllServiceEntries(format: String="json")
POST          /climateService/addServiceEntry                                                           @controllers.ClimateServiceController.addServiceEntry
PUT           /climateService/updateClimateService/id/:id                                               @controllers.ClimateServiceController.updateClimateServiceById(id: Long)
PUT           /climateService/updateClimateService/name/:oldName                                        @controllers.ClimateServiceController.updateClimateServiceByName(oldName: String)
DELETE        /climateService/deleteClimateService/id/:id                                               @controllers.ClimateServiceController.deleteClimateServiceById(id: Long)
DELETE        /climateService/deleteClimateService/name/:name                                           @controllers.ClimateServiceController.deleteClimateServiceByName(name: String)
GET           /climateService/getTop3GradesServices/json                                                @controllers.ClimateServiceController.getTop3GradesServices(format: String="json")
GET           /climateService/getTop3MostRecentlyUsedServices/json                                      @controllers.ClimateServiceController.getTop3MostRecentlyUsedServices(format: String="json")
PUT           /climateService/addFreq/                                                                  @controllers.ClimateServiceController.addFreq
GET           /climateService/getTop3MostRecentServices/json                                            @controllers.ClimateServiceController.getTop3MostRecentServices(format: String="json")
PUT           /climateService/setTime/                                                                  @controllers.ClimateServiceController.setTime

# Instrument
GET           /instrument/getAllInstruments/json                                                        @controllers.InstrumentController.getAllInstruments(format: String="json")
GET           /instrument/getInstrument/id/:id/json                                                     @controllers.InstrumentController.getInstrument(id: Long, format: String="json")
POST          /instrument/addInstrument                                                                 @controllers.InstrumentController.addInstrument
PUT           /instrument/updateInstrument/id/:id                                                       @controllers.InstrumentController.updateInstrumentById(id: Long)
DELETE        /instrument/deleteInstrument/id/:id                                                       @controllers.InstrumentController.deleteInstrument(id: Long)

# Dataset
GET           /dataset/getAllDatasets/json                                                              @controllers.DatasetController.getAllDatasets(format: String="json")
GET           /dataset/getDataset/id/:id/json                                                           @controllers.DatasetController.getDataset(id: Long, format: String="json")
POST          /dataset/addDataset                                                                       @controllers.DatasetController.addDataset
PUT           /dataset/updateDataset/id/:id                                                             @controllers.DatasetController.updateDatasetById(id: Long)
DELETE        /dataset/deleteDataset/id/:id                                                             @controllers.DatasetController.deleteDataset(id: Long)
POST		  /dataset/queryDataset																		@controllers.DatasetController.queryDatasets

# Parameter
GET           /parameter/getAllParameters/json                                                          @controllers.ParameterController.getAllParameters(format: String="json")
GET           /parameter/getParameter/service/:id/name/:name/json                                       @controllers.ParameterController.getParameterByName(id:Long, name: String, format: String="json")
GET           /parameter/getParameter/id/:id/json                                                       @controllers.ParameterController.getParameterById(id: Long, format: String="json")
POST          /parameter/addParameter                                                                   @controllers.ParameterController.addParameter
PUT           /parameter/updateParameter/id/:id                                                         @controllers.ParameterController.updateParameterById(id: Long)
PUT           /parameter/updateParameter/name/:oldName                                                  @controllers.ParameterController.updateParameterByName(oldName: String)
DELETE        /parameter/deleteParameter/service/:id/name/:name                                         @controllers.ParameterController.deleteParameterByName(id:Long, name: String)

# Users
GET           /users/:id                                                                                @controllers.UserController.getUser(id: Long, format: String="json")
POST          /users/add                                                                                @controllers.UserController.addUser
PUT           /users/update/:id                                                                         @controllers.UserController.updateUser(id: Long)
DELETE        /users/delete/:id                                                                         @controllers.UserController.deleteUser(id: Long)
GET			  /users/getAllUsers/json																	@controllers.UserController.getAllUsers(format: String="json")
POST		  /users/isUserValid																		@controllers.UserController.isUserValid
DELETE		  /users/delete/userName/:userName/password/:password										@controllers.UserController.deleteUserByUserNameandPassword(userName: String, password: String)
POST		  /users/isUserEmailValid																	@controllers.UserController.isUserEmailValid
POST          /users/addFriend                                                                          @controllers.UserController.addFriend
POST          /users/getFriends                                                                         @controllers.UserController.getFriends

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                             controllers.Assets.at(path="/public", file)


# Post
GET           /posts/getAllPosts/json                                                                   @controllers.PostController.getAllPosts(format: String="json")
POST          /posts/add                                                                                @controllers.PostController.createPost
POST          /posts/getAllAtClimateServices/name                                                       @controllers.PostController.getAllAtClimateServices

#######################################################################################################################################
Frontend APIs:

GET         /home                                                controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET 		/													 controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET		    /createSuccess				                         controllers.Application.createSuccess()

# BugReporting
GET         /bugs                                                controllers.BugReportController.reports()
GET         /newReport                                           controllers.BugReportController.newReport()
GET         /bug/list                                            controllers.BugReportController.list()
POST        /delete/report                                       controllers.BugReportController.deleteReport()
POST        /solve/report                                        controllers.BugReportController.solveReport()

# About Us
GET         /aboutus                                             controllers.AboutusController.aboutUs(email ?= null)
GET         /aboutProject                                        controllers.AboutusController.aboutProject(email ?= null)

# Climate Model
GET			/climate											controllers.ClimateServiceController.home(email ?= null, vfile ?= null, dataset ?= null)
GET			/climate/tutorial									controllers.ClimateServiceController.tutorial()
GET			/climate/climateServices							controllers.ClimateServiceController.climateServices(email ?= null)
GET			/climate/mostRecentlyAddedClimateServices			controllers.ClimateServiceController.mostRecentlyAddedClimateServices(email ?= null)
GET			/climate/mostRecentlyUsedClimateServices			controllers.ClimateServiceController.mostRecentlyUsedClimateServices(email ?= null)
GET			/climate/mostPopularClimateServices					controllers.ClimateServiceController.mostPopularClimateServices(email ?= null)
GET			/climate/top3					                    controllers.ClimateServiceController.top3(email ?= null)

POST		/climate/new/climateServices    					controllers.ClimateServiceController.newClimateService()
POST    	/climate/delete/climateServices   					controllers.ClimateServiceController.deleteClimateService()
POST		/climate/download/climateServices					controllers.ClimateServiceController.downloadClimateService()
POST		/climate/edit/climateServices						controllers.ClimateServiceController.editClimateService()
GET			/climate/new/climateServices						controllers.ClimateServiceController.addClimateServices()
GET			/climate/oneService									controllers.ClimateServiceController.oneService(url ?= null,email ?= null,id ?= null)

#Keyword search
GET 		/climate/datasets									controllers.DatasetController.datasetList(email ?= null)
GET			/climate/searchDataSet 					 			controllers.DatasetController.searchDataset(email ?= null)
GET 		/climate/getSearchResult				 			controllers.DatasetController.getSearchResult(email ?= null)

#Map static resources from the /public folder to the /assets URL path
GET     	/assets/*file               						controllers.Assets.at(path="/public", file)

GET			/climate/searchService 					 			controllers.ClimateServiceController.searchService(email: String ?= "")
GET 		/climate/getSearchServiceResult				 		controllers.ClimateServiceController.getSearchServiceResult(email: String ?= "")

#Sign Up Page
GET     /climate/sign                                           controllers.Application.sign()
POST    /climate/authenticate                                   controllers.Application.authenticate()
GET     /climate/log                                            controllers.Application.login()
GET     /cimate/findFriend                                      controllers.Application.findFriend(email: String ?= "")
GET     /cimate/findFriendResult                                controllers.Application.getFindFriendResult(email: String ?= "")